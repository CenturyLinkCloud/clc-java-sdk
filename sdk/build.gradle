/*
 * (c) 2015 CenturyLink. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ilya.drabenia' at '3/2/15 8:10 AM' with Gradle 2.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'jacoco'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

def logStacktraces = { ctx ->
    ctx.testLogging {
        showExceptions = true
        showCauses = true
        exceptionFormat = 'full' // full information about failed tests
    }
}

def provideCredentials = { ctx, username, password ->
    ctx.systemProperty "clc.username", username
    ctx.systemProperty "clc.password", password
}

def provideSystemCredentials = { ctx ->
    provideCredentials(
        ctx,
        System.getProperty("clc.username"),
        System.getProperty("clc.password")
    )
}

task runUnitTests(type: Test, dependsOn: 'compileTestJava') {
    useTestNG {
        excludeGroups 'Integration', 'LongRunning', 'Samples', 'Recorded'
        parallel 'classes'
        threadCount 25
    }

    logStacktraces(delegate)
    provideCredentials(delegate, "cloud_user", "cloud_user_password")
}

task runRecordedTests(type: Test, dependsOn: 'compileTestJava') {
    useTestNG {
        includeGroups 'Recorded'
    }

    logStacktraces(delegate)
    provideCredentials(delegate, "cloud_user", "cloud_user_password")
}

task generateCoverageReport(type: JacocoReport) {
    sourceSets sourceSets.main
    executionData runUnitTests, runRecordedTests

    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

task runIntegrationTests(type: Test, dependsOn: 'compileTestJava') {
    useTestNG {
        includeGroups 'Integration', 'LongRunning'
    }

    logStacktraces(delegate)
    provideSystemCredentials(delegate)
}

test () {
    dependsOn(['runUnitTests', 'runRecordedTests'])
}

javadoc {
    source = sourceSets.main.allJava
    destinationDir = file("./../docs/javadoc")
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'

    compile 'commons-net:commons-net:3.3'

    compile 'org.jboss.resteasy:resteasy-client:3.0.11.Final'
    compile 'org.jboss.resteasy:resteasy-jackson2-provider:3.0.11.Final'
    compile 'org.apache.httpcomponents:httpcore:4.3.3'
    compile 'org.apache.httpcomponents:httpclient:4.3.3'
    compile 'com.hierynomus:sshj:0.11.0'

    compile 'com.google.guava:guava:18.0'
    compile 'com.google.inject:guice:3.0'

    testCompile 'org.testng:testng:6.8.21'
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile 'com.github.tomakehurst:wiremock:1.56'
    testRuntime 'org.apache.logging.log4j:log4j-core:2.2'
    testRuntime 'org.apache.logging.log4j:log4j-slf4j-impl:2.2'
}

// apply from: './maven_push.gradle'
